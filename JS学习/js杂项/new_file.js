/*
 * File: app/view/role/RoleMangerPanelViewController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PSInRebate.view.role.RoleMangerPanelViewController', {
	extend: 'Ext.app.ViewController',
	alias: 'controller.rolerolemangerpanel',

	onAddClick: function() {
		var roleGrid = Ext.ComponentQuery.query("viewport rolemangerpanel grid")[0];
		var roleForm = Ext.ComponentQuery.query("viewport rolemangerpanel form")[0];
		var roleStore = roleGrid.getStore();
		var rec = new PSInRebate.model.Role({
			id: -1
		});

		// Ext.Msg.alert("提示",'请先选择新建的记录后在右边框录入角色资料');
		roleStore.insert(0, rec);

		roleGrid.getSelectionModel().select(rec);
		var name = roleForm.down("textfield[name=name]");
		name.focus(true, true);
		/*
		 * roleStore.sync({ success: function (e, opts){
		 * roleStore.reload(); }, failure: function (e, opts){
		 * Ext.Msg.alert("提示",'失败了Failure！！'); }, scope: this
		 * });
		 */
	},
	// 删除 角色
	onRoleDelClick: function() {
		var roleGrid = Ext.ComponentQuery.query("viewport rolemangerpanel grid")[0];
		var roleStore = roleGrid.getStore();
		var roleGridRs = roleGrid.getSelectionModel().getSelection();

		if(roleGridRs.length > 0) {
			var roleList = new Array();
			var content = ["确认删除角色？"];

			for(var i = 0; ln = roleGridRs.length, i < ln; i++) {
				// content.push(roleGridRs[i].data.name);
				roleList.push(roleGridRs[i].data.id);
			};

			var params = {
				roleList: roleList
			};

			Ext.Msg.confirm("删除记录", content, function(btn) {
				if(btn == 'yes') {
					sysRoleContro.deleteRole(params, function(result, e) {
						roleStore.loadPage(1, {
							"start": 0,
							"limit": 20
						});
					});
				}
			}, roleGrid);

		}
	},

	onRefreshClick: function() {
		var roleGrid = Ext.ComponentQuery.query("viewport rolemangerpanel grid")[0];
		var roleStore = roleGrid.getStore();
		roleStore.reload();
	},
	// 保存 按钮
	onModifyClick: function() {

		var roleForm = Ext.ComponentQuery.query("viewport rolemangerpanel form")[0];
		var role = Ext.create('PSInRebate.model.Role', roleForm.getForm().getValues());
		var roleId = roleForm.getForm().getValues().id;
		if(!roleId) {
			Ext.Msg.alert("提示", '请先选择或新建一条记录后再编辑角色资料。');
			return;
		}

		var roleForm = Ext.ComponentQuery.query("viewport rolemangerpanel form")[0];
		roleForm.getForm().submit({
				success: function(form, action) {
					var thisGrid = Ext.ComponentQuery.query("viewport rolemangerpanel grid")[0];
					thisGrid.getStore().reload();
					thisGrid.getSelectionModel().deselectAll();
					// alert("修改成功");
				},
				failure: function(form, action) {
					Ext.Msg.alert('failure','Failure');
				}
			});
	},

	onModifyRoleFunClick: function() {
		if(this.getView().down('grid').getSelectionModel()
			.getSelection().length == 0) {
			Ext.Msg.alert('提示', '请先选中一条记录');
			return;
		}
		var roleForm = Ext.ComponentQuery
			.query("viewport rolemangerpanel form")[0];
		var role = Ext.create('PSInRebate.model.Role', roleForm
			.getForm().getValues());
		var roleId = roleForm.getForm().getValues().id;
		if(roleId < 0) {
			Ext.Msg.alert("提示", '请先保存后再编辑角色资料。');
			return;
		}

		var id = {
			sysRoleId: roleId
		};
		sysFunction.findAllFunction(id,function(result) {
					var root = result;
					var roleWin = Ext.create('PSInRebate.view.role.RoleFuncWin');
					var functionTree = Ext.create('Ext.tree.Panel', {
								rootVisible: false,
								root: root,
								border: 0,
								viewConfig: {onCheckboxChange: function(e,t) {
										var item = e.getTarget(this.getItemSelector(),this.getTargetEl()),record;
										if(item) {
											record = this.getRecord(item);
											var check = !record.get('checked');
											record.set('checked',check);
											if(check) {
												record.bubble(function(parentNode) {
														parentNode.set('checked',true);
														parentNode.expand(false,true);
												});
												record.cascadeBy(function(node) {
														node.set('checked',true);
														node.expand(false,true);
												});
											} else {
												record.cascadeBy(function(node) {
														node.set('checked',false);
												});
											}
										}
									}
								}
							});
					roleWin.add(functionTree);
					roleWin.show();
				});
	},
	onQueryClick: function(btn) {
		var roleGrid = Ext.ComponentQuery.query("viewport rolemangerpanel grid")[0];
		var name = btn.up('toolbar').down('textfield[name=name]').getValue();
		var roleStore = roleGrid.getStore();
		var extraParams = {
			name: name
		};
		roleStore.on("beforeload",function(roleStore, operation, eOpts) {
				Ext.apply(roleStore.proxy.extraParams,
					extraParams);
		});
		roleStore.loadPage(1, {
			"start": 0,
			"limit": 20
		});
		/*
		 * roleStore.load({ params: {start : 0,limit :
		 * 20,page:1} });
		 */
	},
	onRestAddClick: function() {
		var ouType = Ext.create('PSInRebate.model.OuType', {
			ouTypeName: 'Lenlee',
			entityName: 'Lenlee'
		});
		ouType.save({
			success: function() {
				alert('添加成功');
			}
		});
	},
	onRestLoadClick: function() {
		var ouType = Ext.create('Ext.data.Store', {
			model: 'PSInRebate.model.OuType'
		});
		ouType.getModel().load(62, {
			success: function(obj) {}
		});
	},
	onRestUpdateClick: function() {
		var ouType = Ext.create('Ext.data.Store', {
			model: 'PSInRebate.model.OuType'
		});
		ouType.getModel().load(62, {
			success: function(obj) {
				obj.set('ouTypeName', 'Lenlee1111');
				obj.save();
			}
		});
	},
	onRestDeleteClick: function() {
		var ouType = Ext.create('PSInRebate.model.OuType', {
			id: 62,
			ouTypeName: 'Lenlee',
			entityName: 'Lenlee'
		});
		ouType.erase();
	}
});